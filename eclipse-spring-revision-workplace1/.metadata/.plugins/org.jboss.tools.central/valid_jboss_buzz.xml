<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Build and run Buildah inside a Podman container</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/c-W7rRg-ClM/" /><category term="Containers" /><category term="buildah" /><category term="containers" /><category term="Developer Tools" /><category term="Podman" /><author><name>Tom Sweeney</name></author><id>https://developers.redhat.com/blog/?p=576857</id><updated>2019-04-04T07:03:35Z</updated><published>2019-04-04T07:03:35Z</published><content type="html">&lt;p&gt;This past Christmas I gave my wife a set of nesting dolls similar to &lt;a href="https://en.wikipedia.org/wiki/Matryoshka_doll"&gt;Russian Matryoshka dolls&lt;/a&gt;. If you’re not familiar with them, they consist of a wooden doll, which opens to reveal another doll, inside which you&amp;#8217;ll find another doll, and so on until you get to the smallest and often most ornate doll of them all.  This concept got me thinking about nesting containers.&lt;/p&gt; &lt;p&gt;I thought I’d try building my own nesting container using &lt;a href="https://developers.redhat.com/articles/podman-next-generation-linux-container-tools/"&gt;Podman&lt;/a&gt; to create a container in which I could do &lt;a href="https://developers.redhat.com/blog/2019/02/21/podman-and-buildah-for-docker-users/"&gt;Buildah&lt;/a&gt; development and also spin up Buildah containers and images. Once this Podman container was created, I could move it to any &lt;a href="https://developers.redhat.com/topics/linux/"&gt;Linux&lt;/a&gt; platform that supported Podman and do development on Buildah from it. In this article, I&amp;#8217;ll show how I set it up.&lt;/p&gt; &lt;p&gt;&lt;span id="more-576857"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Preparing the environment&lt;/h2&gt; &lt;p&gt;I started this experiment on a newly installed Fedora 29 virtual machine and installed the latest Podman and container-selinux on it with &lt;code&gt;dnf -y install podman container-selinux --enablerepo updates-testing&lt;/code&gt;. This gave me Podman v1.1.2 and container-selinux version 2.85-1.&lt;/p&gt; &lt;p&gt;Because both the container and the container within the container will be using fuse-overlayfs, they won’t be happy trying to mount their respective directories over each other. So, the first step is to create a directory for the container within the container to use, and I’ve named it &lt;code&gt;/var/lib/mycontainer&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;# mkdir /var/lib/mycontainer&lt;/pre&gt; &lt;h2&gt;Podman container creation&lt;/h2&gt; &lt;p&gt;I then created the following Dockerfile, which will pull Fedora, set up the GOPATH, install the Buildah dependencies, use git to clone the project in the &lt;code&gt;/root/buildah&lt;/code&gt; directory, and finally update &lt;code&gt;/etc/container/storage.conf&lt;/code&gt; with sed to uncomment the mount_program:&lt;/p&gt; &lt;pre&gt;# FILE=~/Dockerfile.cinc # /bin/cat &amp;#60;&amp;#60;EOM &amp;#62;$FILE FROM fedora:latest ENV GOPATH=/root/buildah RUN dnf -y install \ make \ golang \ bats \ btrfs-progs-devel \ device-mapper-devel \ glib2-devel \ gpgme-devel \ libassuan-devel \ libseccomp-devel \ ostree-devel \ git \ bzip2 \ go-md2man \ runc \ fuse-overlayfs \ fuse3 \ containers-common; \ mkdir /root/buildah; \ git clone https://github.com/containers/buildah /root/buildah/src/github.com/containers/buildah RUN sed -i -e 's|#mount_program = "/usr/bin/fuse-overlayfs"|mount_program = "/usr/bin/fuse-overlayfs"|' /etc/containers/storage.conf EOM &lt;/pre&gt; &lt;p&gt;Next we create the image using the Dockerfile. (Note the hard-to-see period at the end of the line.) This command can take 5 to 10 minutes to complete, and it seems to hang for a bit near the end, so be patient. This is one of those great commands that you can kick off and let run while you go freshen up your cup of tea.&lt;/p&gt; &lt;pre&gt;# podman build -t buildahimage -f ~/Dockerfile.cinc .&lt;/pre&gt; &lt;p&gt;That’s it for the heavy lifting. Let’s create a Podman container in which we’ll do our Buildah development. The following command creates a container named &lt;code&gt;buildahctr&lt;/code&gt;, mounts the host’s &lt;code&gt;mycontainer&lt;/code&gt; to the container’s &lt;code&gt;containers&lt;/code&gt; directory, runs the container detached using the host’s network, turns off label and seccomp confinement in the container, and finally does a little shell hackery to keep the container up and running.&lt;/p&gt; &lt;pre&gt;# podman run --detach --name=buildahctr --net=host --security-opt label=disable --security-opt seccomp=unconfined --device /dev/fuse:rw -v /var/lib/mycontainer:/var/lib/containers:Z buildahimage sh -c 'while true ;do wait; done' &lt;/pre&gt; &lt;h2&gt;Buildah development&lt;/h2&gt; &lt;p&gt;Great, now we have a container up and running Fedora. Let’s hop in and compile and install Buildah onto it. The following command will get us to the command line inside the container.&lt;/p&gt; &lt;pre&gt;# podman exec -it buildahctr /bin/sh &lt;/pre&gt; &lt;p&gt;Now that we&amp;#8217;re inside the container, it’s time for some standard make, git, and Buildah running. (Note that the next five commands were run at the &lt;code&gt;sh-4.4#&lt;/code&gt; prompt; I’ve removed several of the prompts for easier cutting and pasting.)&lt;/p&gt; &lt;pre&gt;sh-4.4# cd /root/buildah export GOPATH=`pwd` cd /root/buildah/src/github.com/containers/buildah make make install sh-4.4# buildah from alpine alpine-working-container sh-4.4# buildah images REPOSITORY TAG IMAGE ID CREATED SIZE docker.io/library/alpine latest 5cb3aa00f899 9 days ago 5.79 MB &lt;/pre&gt; &lt;p&gt;So now we’ve compiled, installed, and run Buildah from within a Podman container.&lt;/p&gt; &lt;p&gt;Next, let’s do a quick change to the Buildah source and see if we can run that with the change in place. Use vi or your favorite editor to change &lt;code&gt;cmd/buildah/images.go&lt;/code&gt;. Search for the &lt;code&gt;outputHeader()&lt;/code&gt; function (near line 219) and find the line in it: &lt;code&gt;format := "table {{.Name}}\t{{.Tag}}\t"&lt;/code&gt;. Remove the word &amp;#8220;table&amp;#8221; from that line making it &lt;code&gt;format := "{{.Name}}\t{{.Tag}}\t”&lt;/code&gt;. Save the file, exit, then &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;make install&lt;/code&gt; it again.&lt;/p&gt; &lt;pre&gt;sh-4.4# vi cmd/buildah/images.go sh-4.4# make sh-4.4# make install &lt;/pre&gt; &lt;p&gt;Now if you run &lt;code&gt;buildah images&lt;/code&gt;, you should see that we’ve made all output act as if the &lt;code&gt;--quiet&lt;/code&gt; option is on, which doesn’t show the table headers.&lt;/p&gt; &lt;pre&gt;sh-4.4# buildah images docker.io/library/alpine latest 5cb3aa00f899 9 days ago 5.79 MB &lt;/pre&gt; &lt;h2&gt;Running a buildah container inside of a Podman container&lt;/h2&gt; &lt;p&gt;For one last piece of fun, let&amp;#8217;s see if we can run a Buildah container within this Podman container using our modified Buildah code. We&amp;#8217;ll just do something simple and list the contents of the &lt;code&gt;/&lt;/code&gt; directory.&lt;/p&gt; &lt;pre&gt;sh-4.4# buildah from --name myalpine alpine myalpine sh-4.4# buildah run --isolation=chroot myalpine ls / bin dev etc home lib media mnt opt proc root run sbin srv sys tmp usr var &lt;/pre&gt; &lt;h2&gt;A portable Buildah development environment&lt;/h2&gt; &lt;p&gt;If you’ve made it this far, you’ve built a container using Podman that is capable of doing Buildah development. That container can also build containers and then run those containers.  I used Buildah for this example, but I could have used Podman to build the internal container, too. Regardless of the internal tool chosen, I now have a container that can build and run containers within itself, much like Matryoshka dolls. Best yet, I could commit this container and push it out to Quay.io or another container registry and then pull it down and run it on another Fedora machine or even another Linux platform. I’ve made a totally portable Buildah development environment.&lt;/p&gt; &lt;p&gt;I hope this exercise will get you thinking about how you might use Podman and Buildah to create a more flexible and dynamic environment in your own shop. Another blog is underway that will show how to do this without being the root user, so stay tuned!&lt;/p&gt; &lt;p&gt;P.S. No daemons were harmed nor deployed during this demo.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#38;linkname=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F04%2Fbuild-and-run-buildah-inside-a-podman-container%2F&amp;#038;title=Build%20and%20run%20Buildah%20inside%20a%20Podman%20container" data-a2a-url="https://developers.redhat.com/blog/2019/04/04/build-and-run-buildah-inside-a-podman-container/" data-a2a-title="Build and run Buildah inside a Podman container"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/04/build-and-run-buildah-inside-a-podman-container/"&gt;Build and run Buildah inside a Podman container&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/c-W7rRg-ClM" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;This past Christmas I gave my wife a set of nesting dolls similar to Russian Matryoshka dolls. If you’re not familiar with them, they consist of a wooden doll, which opens to reveal another doll, inside which you&amp;#8217;ll find another doll, and so on until you get to the smallest and often most ornate doll [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/04/build-and-run-buildah-inside-a-podman-container/"&gt;Build and run Buildah inside a Podman container&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/04/04/build-and-run-buildah-inside-a-podman-container/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">576857</post-id><dc:creator>Tom Sweeney</dc:creator><dc:date>2019-04-04T07:03:35Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/04/build-and-run-buildah-inside-a-podman-container/</feedburner:origLink></entry><entry><title>DevOps Days Raleigh 2019: DevOps Heroes - Adding Automation Integration to your Toolbox</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uIYQfRjUThE/devops-days-raleigh-2019-devops-heros.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="event" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-devops_days_raleigh_2019_devops_heroes_adding_automation_integration_to_your_toolbox</id><updated>2019-04-04T05:00:03Z</updated><published>2019-04-04T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://www.devopsdays.org/events/2019-raleigh/welcome/" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img alt="DevOps Days" border="0" data-original-height="174" data-original-width="700" height="79" src="https://2.bp.blogspot.com/-vgmNxmBmOmA/XH1mxi-J11I/AAAAAAAAtfs/drIxSJOyDCo0imTBzaWl0sJQUw722dT4ACLcBGAs/s320/Screenshot%2B2019-03-04%2Bat%2B18.54.11.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;This year the same team running the All Things Open conferences has put together a &lt;a href="https://www.devopsdays.org/events/2019-raleigh/welcome/" target="_blank"&gt;DevOps Days Raleigh &lt;/a&gt;from 1-2 Oct 2019.&lt;br /&gt;&lt;br /&gt;I couldn't resist as I've been thinking about how to leverage automation integration across organizations for more than just CI/CD and infrastructure automation.&lt;br /&gt;&lt;br /&gt;This is the perfect chance to test out some of my theories, so I've submitted a full workshop format session. It's all about adding modern open source automation integration tooling to your DevOps toolbox.&lt;br /&gt;&lt;br /&gt;Let's take a look at my session submission.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;DevOps Heroes - Adding Automation Integration to your Toolbox&lt;/h3&gt;&lt;div&gt;&lt;div&gt;&lt;i&gt;DevOps is more than the process of automating your CI/CD pipelines to generate code and deployment artifacts for production. It's also about organizational change and integration of many subtle processes that help you to deliver applications seamlessly from development to production through your operations.&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;a href="https://www.devopsdays.org/events/2019-raleigh/welcome/" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;" target="_blank"&gt;&lt;img alt="DevOps Days" border="0" data-original-height="700" data-original-width="738" height="189" src="https://1.bp.blogspot.com/-FIa5Yx-TuM8/XH1o2SwpWNI/AAAAAAAAtf4/CIaDAo2_NYk9BsZytIj8QhXdJnZywv6qACLcBGAs/s200/Screenshot%2B2019-03-04%2Bat%2B19.04.53.png" title="" width="200" /&gt;&lt;/a&gt;&lt;i&gt;Let's unlock the power of process integration with a hands-on workshop using your own devices (laptops). We'll take you through the integration of an organizational process as part of your DevOps strategy. Step-by-step you'll build a domain model, creating an automated process, integrating user approval tasks and more using modern open source process automation tooling.&amp;nbsp;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;Bring your laptop as this is a hands on experience that takes you from nothing to a fully working DevOps supporting automation integration project. No experience in automation integration is required. Let's add a new tool to your development toolbox and get you jump started on automation integration that's supporting your organizations DevOps activities.&lt;/i&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;(90 minute workshop format with bring your own device)&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;Hope to see you all there!&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=HEpIEXJDBAM:Iq-TM2JdnWA:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=HEpIEXJDBAM:Iq-TM2JdnWA:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=HEpIEXJDBAM:Iq-TM2JdnWA:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=HEpIEXJDBAM:Iq-TM2JdnWA:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=HEpIEXJDBAM:Iq-TM2JdnWA:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=HEpIEXJDBAM:Iq-TM2JdnWA:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=HEpIEXJDBAM:Iq-TM2JdnWA:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=HEpIEXJDBAM:Iq-TM2JdnWA:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=HEpIEXJDBAM:Iq-TM2JdnWA:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=HEpIEXJDBAM:Iq-TM2JdnWA:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=HEpIEXJDBAM:Iq-TM2JdnWA:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/HEpIEXJDBAM" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uIYQfRjUThE" height="1" width="1" alt=""/&gt;</content><summary>This year the same team running the All Things Open conferences has put together a DevOps Days Raleigh from 1-2 Oct 2019. I couldn't resist as I've been thinking about how to leverage automation integration across organizations for more than just CI/CD and infrastructure automation. This is the perfect chance to test out some of my theories, so I've submitted a full workshop format session. It's a...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-04-04T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/HEpIEXJDBAM/devops-days-raleigh-2019-devops-heros.html</feedburner:origLink></entry><entry><title>Speed up SystemTap script monitoring of system calls</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/sVzwsmwC500/" /><category term="Performance" /><category term="Red Hat Enterprise Linux" /><category term="performance" /><category term="systemtap" /><author><name>William Cohen</name></author><id>https://developers.redhat.com/blog/?p=519587</id><updated>2019-04-03T07:00:52Z</updated><published>2019-04-03T07:00:52Z</published><content type="html">&lt;p&gt;SystemTap has extensive libraries called tapsets that allow developers to instrument various aspects of the kernel&amp;#8217;s operation. SystemTap allows the use of wildcards to instrument multiple locations in particular subsystems.  SystemTap has to perform a significant amount of work to create instrumentation for each of the places being probed.  This overhead is particularly apparent when using the wildcards for the system call tapset that contains hundreds of entries (&lt;code&gt;syscall.*&lt;/code&gt; and &lt;code&gt;syscall.*.return&lt;/code&gt;). For some subsets of data collection, replacing the wildcard-matched syscall probes in SystemTap scripts with the &lt;code&gt;kernel.trace("sys_enter")&lt;/code&gt;  and the &lt;code&gt;kernel.trace("sys_exit")&lt;/code&gt; probe will produce smaller instrumentation modules that compile and start up more quickly. In this article, I&amp;#8217;ll show a few examples of how this works.&lt;/p&gt; &lt;p&gt;&lt;span id="more-519587"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;All system calls enter the kernel through the &lt;code&gt;kernel.trace("sys_enter")&lt;/code&gt; probe, and all system calls exit the kernel through the &lt;code&gt;kernel.trace("sys_exit")&lt;/code&gt; probe. Below is the SystemTap command listing those probe points and the arguments available. The &lt;code&gt;kernel.trace("sys_enter")&lt;/code&gt; probe provides the &lt;code&gt;$id&lt;/code&gt; variable, which can be mapped to the system call name using the &lt;code&gt;syscall_name()&lt;/code&gt; function. The &lt;code&gt;kernel.trace("sys_exit")&lt;/code&gt; probe provides the return value &lt;code&gt;$ret&lt;/code&gt; indicating the success or failure of the system call.&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;$ stap -L 'kernel.trace("sys_*")' kernel.trace("raw_syscalls:sys_enter") $regs:struct pt_regs* $id:long int kernel.trace("raw_syscalls:sys_exit") $regs:struct pt_regs* $ret:long int&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;As a concrete example, let&amp;#8217;s look at the &lt;code&gt;syscalls_by_pid.stp&lt;/code&gt; example included in systemtap-client-3.3-3.el7.x86_64. It uses the non-dwarf variant of the system call instrumentation: &lt;code&gt;nd_syscall.*&lt;/code&gt;.&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;global syscalls probe begin { print ("Collecting data... Type Ctrl-C to exit and display results\n") } probe nd_syscall.* { syscalls[pid()]++ } probe end { printf ("%-10s %-s\n", "#SysCalls", "PID") foreach (pid in syscalls-) printf("%-10d %-d\n", syscalls[pid], pid) }&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;Below is a run of the original script. The &lt;code&gt;-v&lt;/code&gt; option provides information about the space and time each of the five passes SystemTap uses. The &lt;code&gt;-k&lt;/code&gt; option keeps around the intermediate files created by SystemTap, so later we can compare the size of those intermediate files to the results of the revised script if needed. The &lt;code&gt;--disable-cache&lt;/code&gt; ensures that SystemTap does not attempt to use a previously built version of a file and corrupt the time measurements. The &lt;code&gt;-m slow&lt;/code&gt; names the resulting SystemTap instrumentation module to slow.ko.&lt;/p&gt; &lt;p&gt;At the end of the command is the &lt;code&gt;-c "sleep 0"&lt;/code&gt;. This command runs the script for a very short time, allowing us to observe the startup and shutdown overhead of pass 5 of the script.&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;$ stap -v -k --disable-cache -m slow ./syscalls_by_pid.stp -c "sleep 0" Pass 1: parsed user script and 497 library scripts using 264396virt/59208res/3572shr/56344data kb, in 390usr/30sys/423real ms. Pass 2: analyzed script: 531 probes, 27 functions, 103 embeds, 4 globals using 391992virt/187976res/4716shr/183940data kb, in 8170usr/1370sys/9276real ms. Pass 3: translated to C into "/tmp/stapos95gX/slow_src.c" using 391992virt/188212res/4952shr/183940data kb, in 40usr/0sys/45real ms. Pass 4: compiled C into "slow.ko" in 8350usr/1660sys/9794real ms. Pass 5: starting run. Collecting data... Type Ctrl-C to exit and display results #SysCalls PID 42 19096 10 19078 Pass 5: run completed in 10usr/9450sys/9940real ms. Keeping temporary directory "/tmp/stapos95gX"&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;Below is the new version of the script. Notice that the only difference is the change of &lt;code&gt;nd_syscall.*&lt;/code&gt; to &lt;code&gt;kernel.trace("sys_enter")&lt;/code&gt;. The script functions in the same manner as before.&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;global syscalls probe begin { print ("Collecting data... Type Ctrl-C to exit and display results\n") } probe kernel.trace("sys_enter") { syscalls[pid()]++ } probe end { printf ("%-10s %-s\n", "#SysCalls", "PID") foreach (pid in syscalls-) printf("%-10d %-d\n", syscalls[pid], pid) } &lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;Below is a run of the new script. A noticeable effect of using &lt;code&gt;kernel.trace("sys_enter")&lt;/code&gt; in place of &lt;code&gt;nd_syscall.*&lt;/code&gt; is that, in pass 2, which is the elaboration phase where SystemTap pulls in information from the tapset libraries, there are only 3 probes, 1 function, and 3 embeds used compared to 531 probes, 27 functions, and 103 embeds for the wildcard syscall version. This change has a follow-on effect for pass 5 where the script is actually run. Because the script is running for a very short duration, most of the time in pass 5 is due to the overhead of starting and stopping the script. For the earlier script using &lt;code&gt;nd_syscall.*&lt;/code&gt; to probe the systemcalls 9940 milliseconds, almost 10 seconds, of real time is used in pass 5, but only 363 milliseconds of real time is used for the tracepoint version.&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;$ stap -v -k --disable-cache -m fast ./syscalls_by_pid.stp -c "sleep 0" Pass 1: parsed user script and 497 library scripts using 264400virt/59208res/3572shr/56348data kb, in 410usr/30sys/456real ms. Pass 2: analyzed script: 3 probes, 1 function, 3 embeds, 1 global using 389600virt/185704res/4856shr/181548data kb, in 45190usr/8990sys/9842real ms. Pass 3: translated to C into "/tmp/stapPcXVCr/fast_src.c" using 389600virt/185948res/5100shr/181548data kb, in 0usr/10sys/1real ms. Pass 4: compiled C into "fast.ko" in 6900usr/1730sys/8231real ms. Pass 5: starting run. Collecting data... Type Ctrl-C to exit and display results #SysCalls PID 42 11076 14 6381 11 2715 10 11071 Pass 5: run completed in 20usr/50sys/363real ms. Keeping temporary directory "/tmp/stapPcXVCr" &lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;The resulting instrumentation for the tracepoint version is also much smaller than the wildcard version, 97KB versus 425KB:&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;$ ls -l */*.ko -rw-rw-r--. 1 wcohen wcohen 97392 Mar 18 15:32 fast/fast.ko -rw-rw-r--. 1 wcohen wcohen 425408 Mar 18 15:25 slow/slow.ko&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;The previous example did not track system calls by name. The system call name can be obtained from the &lt;code&gt;$id&lt;/code&gt; variable of the &lt;code&gt;kernel.trace("sys_enter")&lt;/code&gt;. Below is a one-line script that will tally the times each different system call is used on the system:&lt;/p&gt; &lt;blockquote&gt; &lt;pre&gt;stap -e 'global syscalls_count; probe kernel.trace("sys_enter") {syscalls_count[syscall_name($id)]&amp;#60;&amp;#60;&amp;#60;1}'&lt;/pre&gt; &lt;/blockquote&gt; &lt;p&gt;Because of the benefits of using these tracepoints in scripts, SystemTap 4.0 includes the &lt;a href="https://sourceware.org/systemtap/tapsets/syscall_any.stp.html"&gt;syscall_any tapsets&lt;/a&gt; and various &lt;a href="https://sourceware.org/systemtap/examples/"&gt;SystemTap examples&lt;/a&gt; now use the tapset where possible. You should consider similar optimizations using the &lt;code&gt;kernel.trace("sys_enter")&lt;/code&gt; and &lt;code&gt;kernel.trace("sys_exit")&lt;/code&gt; or the &lt;code&gt;syscall_any&lt;/code&gt; tapset for your scripts monitoring all the system calls.&lt;/p&gt; &lt;p&gt;See also:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/11/08/systemtap-reduced-startup-syscalls/" rel="bookmark"&gt;Reducing the startup overhead of SystemTap monitoring scripts with syscall_any tapset&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F03%2Fspeed-up-systemtap-script-monitoring-of-system-calls%2F&amp;#38;linkname=Speed%20up%20SystemTap%20script%20monitoring%20of%20system%20calls" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F03%2Fspeed-up-systemtap-script-monitoring-of-system-calls%2F&amp;#38;linkname=Speed%20up%20SystemTap%20script%20monitoring%20of%20system%20calls" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F03%2Fspeed-up-systemtap-script-monitoring-of-system-calls%2F&amp;#38;linkname=Speed%20up%20SystemTap%20script%20monitoring%20of%20system%20calls" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F03%2Fspeed-up-systemtap-script-monitoring-of-system-calls%2F&amp;#38;linkname=Speed%20up%20SystemTap%20script%20monitoring%20of%20system%20calls" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F03%2Fspeed-up-systemtap-script-monitoring-of-system-calls%2F&amp;#38;linkname=Speed%20up%20SystemTap%20script%20monitoring%20of%20system%20calls" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F03%2Fspeed-up-systemtap-script-monitoring-of-system-calls%2F&amp;#38;linkname=Speed%20up%20SystemTap%20script%20monitoring%20of%20system%20calls" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F03%2Fspeed-up-systemtap-script-monitoring-of-system-calls%2F&amp;#38;linkname=Speed%20up%20SystemTap%20script%20monitoring%20of%20system%20calls" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F03%2Fspeed-up-systemtap-script-monitoring-of-system-calls%2F&amp;#38;linkname=Speed%20up%20SystemTap%20script%20monitoring%20of%20system%20calls" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F03%2Fspeed-up-systemtap-script-monitoring-of-system-calls%2F&amp;#038;title=Speed%20up%20SystemTap%20script%20monitoring%20of%20system%20calls" data-a2a-url="https://developers.redhat.com/blog/2019/04/03/speed-up-systemtap-script-monitoring-of-system-calls/" data-a2a-title="Speed up SystemTap script monitoring of system calls"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/03/speed-up-systemtap-script-monitoring-of-system-calls/"&gt;Speed up SystemTap script monitoring of system calls&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/sVzwsmwC500" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;SystemTap has extensive libraries called tapsets that allow developers to instrument various aspects of the kernel&amp;#8217;s operation. SystemTap allows the use of wildcards to instrument multiple locations in particular subsystems.  SystemTap has to perform a significant amount of work to create instrumentation for each of the places being probed.  This overhead is particularly apparent when [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/03/speed-up-systemtap-script-monitoring-of-system-calls/"&gt;Speed up SystemTap script monitoring of system calls&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/04/03/speed-up-systemtap-script-monitoring-of-system-calls/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">519587</post-id><dc:creator>William Cohen</dc:creator><dc:date>2019-04-03T07:00:52Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/03/speed-up-systemtap-script-monitoring-of-system-calls/</feedburner:origLink></entry><entry><title>Announcing Red Hat CodeReady Studio 12.11.0.GA and JBoss Tools 4.11.0.Final for Eclipse 2019-03</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uJbjABJFaXE/" /><category term="Announcement" /><category term="CodeReady portfolio" /><category term="Developer Tools" /><category term="Java" /><category term="Products" /><category term="Red Hat JBoss Developer Studio" /><category term="Eclipse" /><category term="Red Hat JBoss Enterprise Application Platform" /><category term="Red Hat OpenShift" /><author><name>Jeff Maury</name></author><id>https://developers.redhat.com/blog/?p=579707</id><updated>2019-04-02T18:00:57Z</updated><published>2019-04-02T18:00:57Z</published><content type="html">&lt;p&gt;&lt;a href="http://tools.stage.jboss.org/documentation/whatsnew/jbosstools/4.11.0.Final.html"&gt;JBoss Tools 4.11.0&lt;/a&gt; and &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio 12.11 &lt;/a&gt;for Eclipse 2019-03 are here and are waiting for you. In this article, I&amp;#8217;ll cover the highlights of the new releases and show how to get started.&lt;span id="more-579707"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2 id="installation"&gt;Installation&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Red Hat CodeReady Studio (previously known as Red Hat Developer Studio) comes with everything pre-bundled in its installer. Simply download it from our &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio product page&lt;/a&gt; and run it like this:&lt;/p&gt; &lt;pre&gt;java -jar devstudio-&amp;#60;installername&amp;#62;.jar&lt;/pre&gt; &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio require a bit more:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release requires at least Eclipse 4.11 (2019-03) but we recommend using the latest &lt;a href="http://www.eclipse.org/downloads/packages/release/2019-03/r/eclipse-ide-java-ee-developers"&gt;Eclipse 4.11 2019-03 JEE Bundle&lt;/a&gt; since then you get most of the dependencies preinstalled.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &amp;#8220;JBoss Tools&amp;#8221; or &amp;#8220;Red Hat Developer Studio.&amp;#8221;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For JBoss Tools, you can also download directly from the update site:&lt;/p&gt; &lt;/div&gt; &lt;div class="literalblock"&gt; &lt;div class="content" style="text-align: left;"&gt; &lt;pre&gt;http://download.jboss.org/jbosstools/photon/stable/updates/&lt;/pre&gt; &lt;h2 id="what-is-new" style="text-align: left;"&gt;What is new?&lt;/h2&gt; &lt;p style="text-align: left;"&gt;Our main focus for this release was improvements for container-based development and bug fixing. Eclipse 2019-03 itself has a lot of new cool stuff, but I will highlight just a few updates in both Eclipse 2019-03 and JBoss Tools plugins that are worth mentioning.&lt;/p&gt; &lt;h3 id="openshift-3" style="text-align: left;"&gt;Red Hat OpenShift 3&lt;/h3&gt; &lt;h4 id="new-openshift-connection-helper" style="text-align: left;"&gt;New Red Hat OpenShift connection helper&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;When you need to defined a new OpenShift connection, you need to provide the following information:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist" style="text-align: left;"&gt; &lt;ul&gt; &lt;li&gt;Cluster URL&lt;/li&gt; &lt;li&gt;Username and password or token&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;If you’ve already logged in your cluster through the OpenShift Web Console, you can copy an &lt;code&gt;oc&lt;/code&gt; command in the clipboard that contains both the cluster URL and your token.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;So, from now, there is a new option that allows you to initialize the wizard fields from the copied &lt;code&gt;oc&lt;/code&gt; command:&lt;/p&gt; &lt;p id="DLTeCYH"&gt;&lt;img class=" alignnone size-full wp-image-579727 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2a7dc8333.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2a7dc8333.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2a7dc8333.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2a7dc8333-300x281.png 300w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;Click on the &lt;code&gt;Paste Login Command&lt;/code&gt; button, and the fields will be initialized:&lt;/p&gt; &lt;p id="srAfoqk"&gt;&lt;img class=" alignnone size-full wp-image-579737 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2a9b4f3d0.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2a9b4f3d0.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2a9b4f3d0.png 684w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2a9b4f3d0-300x281.png 300w" sizes="(max-width: 684px) 100vw, 684px" /&gt;&lt;/p&gt; &lt;h3 id="server-tools" style="text-align: left;"&gt;Server tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="eap-7-2-server-adapter" style="text-align: left;"&gt;EAP 7.2 Server Adapter&lt;/h4&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;A server adapter has been added to work with EAP 7.2.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3" style="text-align: left;"&gt; &lt;h4 id="wildfly-15-server-adapter"&gt;Wildfly 15 Server Adapter&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A server adapter has been added to work with Wildfly 15. It adds support for Java EE 8.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="wildfly-16-server-adapter" style="text-align: left;"&gt;Wildfly 16 Server Adapter&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;A server adapter has been added to work with Wildfly 16. It adds support for Java EE 8.&lt;/p&gt; &lt;div class="sect2" style="text-align: left;"&gt; &lt;h3 id="hibernate-tools"&gt;Hibernate Tools&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="new-runtime-provider"&gt;New Runtime Provider&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The new Hibernate 5.4 runtime provider has been added. It incorporates Hibernate Core version 5.4.1.Final and Hibernate Tools version 5.4.1.Final.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="runtime-provider-updates"&gt;Runtime Provider Updates&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.9.Final and Hibernate Tools version 5.3.9.Final.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Hibernate 5.2 runtime provider now incorporates Hibernate Core version 5.2.18.Final and Hibernate Tools version 5.2.12.Final.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2" style="text-align: left;"&gt; &lt;h3 id="maven"&gt;Maven&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="maven-support-updated-to-m2e-1-11"&gt;Maven support updated to M2E 1.11&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Maven support is based on Eclipse M2E 1.11&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="platform" style="text-align: left;"&gt;Platform&lt;/h3&gt; &lt;div class="sect3"&gt; &lt;h4 id="views-dialogs-and-toolbar" style="text-align: left;"&gt;Views, Dialogs and Toolbar&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="user-defined-resource-filters-in-project-explorer" style="text-align: left;"&gt;User defined resource filters in Project Explorer&lt;/h5&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;The &lt;em&gt;Filters and Customization… &lt;/em&gt; menu in &lt;em&gt;Project Explorer &lt;/em&gt;now shows an additional &lt;em&gt;User filters&lt;/em&gt; tab, which can be used to exclude some resources from Project Explorer based on their name.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;Full name and regular expressions are supported.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;p id="umQfiXS"&gt;&lt;img class=" alignnone size-full wp-image-579747 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2b610cf49.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2b610cf49.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2b610cf49.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2b610cf49-300x166.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;div class="sect4"&gt; &lt;h5 id="error-log-view-added-to-platform" style="text-align: left;"&gt;Error Log view added to Platform&lt;/h5&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;The &lt;em&gt;Error Log &lt;/em&gt;view has been moved from the PDE project to the Platform project. See &lt;a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=50517"&gt;bug 50517&lt;/a&gt; for details.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="copy-to-clipboard-in-installation-details" style="text-align: left;"&gt;Copy to clipboard in Installation Details&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;A copy to clipboard action has been added to all tabs of the &lt;em&gt;Installation Details&lt;/em&gt; dialog.&lt;/p&gt; &lt;p id="PDbquCH" style="text-align: left;"&gt;&lt;img class=" alignnone size-full wp-image-579757 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2b8eb5c91.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2b8eb5c91.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2b8eb5c91.png 405w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2b8eb5c91-300x156.png 300w" sizes="(max-width: 405px) 100vw, 405px" /&gt;&lt;/p&gt; &lt;h5 id="copy-paste-of-environment-variables" style="text-align: left;"&gt;Copy and paste environment variables&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;The &lt;em&gt;Environment&lt;/em&gt; tab in a &lt;em&gt;Launch configuration&lt;/em&gt; dialog supports copy and paste actions now. The environment variables are transferred as text data, so it is possible to copy and paste not only between two different launch configurations but also between the launch configuration and, for example, a text editor or the command line.&lt;/p&gt; &lt;p id="OsQEPOF"&gt;&lt;img class=" alignnone size-full wp-image-579767 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2bb66409b.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2bb66409b.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2bb66409b.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2bb66409b-300x214.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;div class="sect4"&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;This feature is available in all launch configurations, which use the common &lt;em&gt;Environment &lt;/em&gt;tab.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="useful-links-to-add-projects-to-empty-workspace" style="text-align: left;"&gt;Useful links to add projects to empty workspace&lt;/h5&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;When Eclipse IDE is started for the first time or with a new workspace, it may not be intuitive for new users on how to proceed. To help users get started, the following useful links have been provided to add a project to the workspace:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li style="text-align: left;"&gt;Perspective specific project creation wizard&lt;/li&gt; &lt;li style="text-align: left;"&gt;Generic New Project wizard&lt;/li&gt; &lt;li style="text-align: left;"&gt;Import projects wizard&lt;/li&gt; &lt;/ul&gt; &lt;p id="lfCuSeA"&gt;&lt;img class=" alignnone size-full wp-image-579777 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2be876d76.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2be876d76.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2be876d76.png 468w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2be876d76-300x281.png 300w" sizes="(max-width: 468px) 100vw, 468px" /&gt;&lt;/p&gt; &lt;h5 id="new-mnemonics-in-error-log-view" style="text-align: left;"&gt;New mnemonics in Error Log view&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;New mnemonics have been added for &lt;em&gt;Export Entry… &lt;/em&gt; and &lt;em&gt;Event Detail &lt;/em&gt;entries in the context menu of &lt;em&gt;Error Log&lt;/em&gt; view.&lt;/p&gt; &lt;p id="CoUZBDx"&gt;&lt;img class=" alignnone size-full wp-image-579787 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c14eedd5.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c14eedd5.png" alt="" /&gt;&lt;/p&gt; &lt;h4 id="themes-and-styling" style="text-align: left;"&gt;Themes and Styling&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="improved-dark-theme-for-mac" style="text-align: left;"&gt;Improved Dark theme for Mac&lt;/h5&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;The Dark theme for Mac has been improved to use the colors from the macOS system dark appearance. Some of the notable changes in Eclipse IDE are the dark window title bar, menus, file dialogs, combos, and buttons.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This change is available on macOS Mojave and later.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;Before:&lt;/p&gt; &lt;p id="zzXUhxr"&gt;&lt;img class=" alignnone size-full wp-image-579797 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c3a6c737.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c3a6c737.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c3a6c737.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c3a6c737-300x282.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;After:&lt;/p&gt; &lt;p id="sgZQOHN"&gt;&lt;img class=" alignnone size-full wp-image-579807 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c5a110e8.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c5a110e8.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c5a110e8.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c5a110e8-300x268.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;h5 id="improved-dark-theme-for-windows" style="text-align: left;"&gt;Improved Dark theme for Windows&lt;/h5&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;The drawing operations have been improved in Windows so the custom drawn icons look better now. For example, check out the close icon below.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;Before:&lt;/p&gt; &lt;p id="wVpSTLG"&gt;&lt;img class=" alignnone size-full wp-image-579817 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c7fc7878.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c7fc7878.png" alt="" /&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;After:&lt;/p&gt; &lt;p id="SzQDbMw" style="text-align: left;"&gt;&lt;img class=" alignnone size-full wp-image-579827 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c9c9dc59.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2c9c9dc59.png" alt="" /&gt;&lt;/p&gt; &lt;div class="sect2" style="text-align: left;"&gt; &lt;div class="sect3"&gt; &lt;h4 id="general-updates"&gt;General Updates&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="performance-improvements"&gt;Performance improvements&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The startup and interactive performance of multiple operations has been improved again in this release.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="java-developement-tools-jdt" style="text-align: left;"&gt;Java Development Tools (JDT)&lt;/h3&gt; &lt;div class="sect3" style="text-align: left;"&gt; &lt;h4 id="java-12-support"&gt;Java 12 Support&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="java-12"&gt;Java 12&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="http://jdk.java.net/12/"&gt;Java 12&lt;/a&gt; is out and Eclipse JDT supports Java 12 for 4.11 via &lt;a href="https://marketplace.eclipse.org/content/java-12-support-eclipse-2019-03-411"&gt;Eclipse Marketplace&lt;/a&gt;. The release notably includes the following Java 12 feature: &lt;a href="http://openjdk.java.net/jeps/325"&gt;JEP 325: Switch Expressions (Preview)&lt;/a&gt;. Please note that this is a &lt;a href="http://openjdk.java.net/jeps/12"&gt;preview language feature&lt;/a&gt; and hence enable preview option should be on. For an informal introduction of the support, please refer to &lt;a href="https://wiki.eclipse.org/Java12/Examples"&gt;Java 12 Examples wiki&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect3"&gt; &lt;h4 id="junit" style="text-align: left;"&gt;JUnit&lt;/h4&gt; &lt;div class="sect4" style="text-align: left;"&gt; &lt;h5 id="junit-5-4"&gt;JUnit 5.4&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://junit.org/junit5/docs/5.4.0/release-notes/"&gt;JUnit 5.4&lt;/a&gt; is here and Eclipse JDT has been updated to use this version.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect4"&gt; &lt;h5 id="test-factory-template" style="text-align: left;"&gt;Test factory template&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;JUnit Jupiter now allows test factory methods to return a single &lt;code&gt;DynamicNode&lt;/code&gt;. The &lt;code&gt;test_factory&lt;/code&gt; template has been updated to include &lt;code&gt;DynamicNode&lt;/code&gt; in the return type.&lt;/p&gt; &lt;p id="jBuSjhQ" style="text-align: left;"&gt;&lt;img class=" alignnone size-full wp-image-579837 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2ccad7d28.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2ccad7d28.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2ccad7d28.png 449w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2ccad7d28-300x134.png 300w" sizes="(max-width: 449px) 100vw, 449px" /&gt;&lt;/p&gt; &lt;h4 id="java-editor" style="text-align: left;"&gt;Java Editor&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="default-and-constant-values-in-content-assist-information-pop-up" style="text-align: left;"&gt;Default and constant values in content assist information pop-up&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;The additional information pop-up of a content assist proposal now shows the default value of an annotation type element:&lt;/p&gt; &lt;p id="bypZFab"&gt;&lt;img class=" alignnone size-full wp-image-579847 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2cee72a33.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2cee72a33.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2cee72a33.png 516w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2cee72a33-300x167.png 300w" sizes="(max-width: 516px) 100vw, 516px" /&gt;&lt;/p&gt; &lt;p style="text-align: left;"&gt;and the value of a constant:&lt;/p&gt; &lt;p id="KDmwFAO" style="text-align: left;"&gt;&lt;img class=" alignnone size-full wp-image-579857 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d0a03166.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d0a03166.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d0a03166.png 470w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d0a03166-300x68.png 300w" sizes="(max-width: 470px) 100vw, 470px" /&gt;&lt;/p&gt; &lt;h5 id="create-service-provider-method" style="text-align: left;"&gt;Create service provider method&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;If a service defined in a &lt;code&gt;module-info.java&lt;/code&gt; file has an invalid service provider implementation, a &lt;em&gt;Quick Fix &lt;/em&gt;(Ctrl + 1) is now available to create the new provider method:&lt;/p&gt; &lt;p id="OodYBXj"&gt;&lt;img class=" alignnone size-full wp-image-579867 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d372f604.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d372f604.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d372f604.png 512w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d372f604-300x155.png 300w" sizes="(max-width: 512px) 100vw, 512px" /&gt;&lt;/p&gt; &lt;p id="HErBshn"&gt;&lt;img class=" alignnone size-full wp-image-579877 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d56e14c2.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d56e14c2.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d56e14c2.png 391w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d56e14c2-300x208.png 300w" sizes="(max-width: 391px) 100vw, 391px" /&gt;&lt;/p&gt; &lt;h4 id="java-formatter" style="text-align: left;"&gt;Java Formatter&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="line-wrapping-settings-for-binary-operators" style="text-align: left;"&gt;Line wrapping settings for binary operators&lt;/h5&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;Instead of a single line wrapping setting for binary expressions, there’s now a whole section of settings for various kinds of binary operators (multiplicative, additive, logical, etc.). There are settings for relational (including equality) and shift operators, which were not covered by the old setting. Also, string concatenation can now be treated differently from arithmetic sum.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;The settings can be found in the &lt;em&gt;Profile Editor&lt;/em&gt; (&lt;em&gt;Preferences &amp;#62; Java &amp;#62; Code Style &amp;#62; Formatter &amp;#62; Edit…&lt;/em&gt; ) under the &lt;em&gt;Line Wrapping &amp;#62; Wrapping settings &amp;#62; Binary expressions&lt;/em&gt; subsection.&lt;/p&gt; &lt;p id="JiOdiTC" style="text-align: left;"&gt;&lt;img class=" alignnone size-full wp-image-579887 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d7e6bfcf.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d7e6bfcf.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d7e6bfcf.png 466w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2d7e6bfcf-300x251.png 300w" sizes="(max-width: 466px) 100vw, 466px" /&gt;&lt;/p&gt; &lt;h5 id="white-space-settings-for-binary-operators" style="text-align: left;"&gt;White space settings for binary operators&lt;/h5&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;The white space around operators in binary expressions can now be controlled separately for different groups of operators, consistent with the line wrapping settings.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;The new &lt;em&gt;Binary operators&lt;/em&gt; sub-section has been added under &lt;em&gt;White Space &amp;#62; Expressions &lt;/em&gt;in the Formatter profile editor.&lt;/p&gt; &lt;p id="pVUHuVE"&gt;&lt;img class=" alignnone size-full wp-image-579897 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2da824226.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2da824226.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2da824226.png 437w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2da824226-273x300.png 273w" sizes="(max-width: 437px) 100vw, 437px" /&gt;&lt;/p&gt; &lt;h5 id="wrapping-setting-for-chained-conditional-expressions" style="text-align: left;"&gt;Wrapping setting for chained conditional expressions&lt;/h5&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;A chain of &lt;em&gt;nested conditional expressions&lt;/em&gt; (using ternary operator) can be now wrapped as a single group, with all of them indented at the same level. It’s only possible for right-sided nesting.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;You can find the &lt;em&gt;Chained conditionals&lt;/em&gt; setting in the &lt;em&gt;Profile Editor&lt;/em&gt; under the &lt;em&gt;Line Wrapping &amp;#62; Wrapping settings &amp;#62; Other expressions&lt;/em&gt; subsection.&lt;/p&gt; &lt;p id="GMjslWG" style="text-align: left;"&gt;&lt;img class=" alignnone size-full wp-image-579907 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2dd05c68d.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2dd05c68d.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2dd05c68d.png 436w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2dd05c68d-300x213.png 300w" sizes="(max-width: 436px) 100vw, 436px" /&gt;&lt;/p&gt; &lt;h5 id="indent-javadoc-tag-descriptions" style="text-align: left;"&gt;Indent Javadoc tag descriptions&lt;/h5&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;The Formatter Profile has a new setting that indents wrapped Javadoc tag descriptions. It’s called &lt;em&gt;Indent other tag descriptions when wrapped&lt;/em&gt;, in contrast to the preexisting &lt;em&gt;Indent wrapped @param/@throws descriptions&lt;/em&gt; setting. It affects tags like &lt;code&gt;@return&lt;/code&gt; or &lt;code&gt;@deprecated&lt;/code&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;The settings can be found in the &lt;em&gt;Profile Editor&lt;/em&gt; (&lt;em&gt;Preferences &amp;#62; Java &amp;#62; Code Style &amp;#62; Formatter &amp;#62; Edit…&lt;/em&gt; ) under the &lt;em&gt;Comments &amp;#62; Javadocs&lt;/em&gt; section.&lt;/p&gt; &lt;p id="WqoBlXG"&gt;&lt;img class=" alignnone size-full wp-image-579917 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2e01c967d.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2e01c967d.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2e01c967d.png 478w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2e01c967d-300x236.png 300w" sizes="(max-width: 478px) 100vw, 478px" /&gt;&lt;/p&gt; &lt;h4 id="debug" style="text-align: left;"&gt;Debug&lt;/h4&gt; &lt;div class="sect4"&gt; &lt;h5 id="history-for-expressions-in-the-variables-view" style="text-align: left;"&gt;History for expressions in the Variables view&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p style="text-align: left;"&gt;The &lt;em&gt;Variables&lt;/em&gt; view now stores a history of the expressions used in the &lt;em&gt;Detail &lt;/em&gt;pane. You can choose a &lt;em&gt;previously entered expression&lt;/em&gt; for a variable from the new drop-down menu. The expression will be copied to the &lt;em&gt;Detail &lt;/em&gt;pane where you can select it to perform various actions present in the context menu.&lt;/p&gt; &lt;p id="DxPyqEP"&gt;&lt;img class=" alignnone size-full wp-image-579927 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2e254b003.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2e254b003.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2e254b003.png 416w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/img_5c9b2e254b003-300x246.png 300w" sizes="(max-width: 416px) 100vw, 416px" /&gt;&lt;/p&gt; &lt;div class="sect1"&gt; &lt;div class="sectionbody"&gt; &lt;div class="sect2"&gt; &lt;h3 id="and-more" style="text-align: left;"&gt;And more…&lt;/h3&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;You can find more noteworthy updates in on &lt;a href="http://tools.stage.jboss.org/documentation/whatsnew/jbosstools/4.11.0.Final.html"&gt;this page&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what-is-next" style="text-align: left;"&gt;What is next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph" style="text-align: left;"&gt; &lt;p&gt;With JBoss Tools 4.11.0 and Red Hat CodeReady Studio 12.11 out, we are already working on the next release for Eclipse 2019-06. Stay tuned for more updates.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2012.11.0.GA%20and%20JBoss%20Tools%204.11.0.Final%20for%20Eclipse%202019-03" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2012.11.0.GA%20and%20JBoss%20Tools%204.11.0.Final%20for%20Eclipse%202019-03" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2012.11.0.GA%20and%20JBoss%20Tools%204.11.0.Final%20for%20Eclipse%202019-03" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2012.11.0.GA%20and%20JBoss%20Tools%204.11.0.Final%20for%20Eclipse%202019-03" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2012.11.0.GA%20and%20JBoss%20Tools%204.11.0.Final%20for%20Eclipse%202019-03" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2012.11.0.GA%20and%20JBoss%20Tools%204.11.0.Final%20for%20Eclipse%202019-03" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2012.11.0.GA%20and%20JBoss%20Tools%204.11.0.Final%20for%20Eclipse%202019-03" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2012.11.0.GA%20and%20JBoss%20Tools%204.11.0.Final%20for%20Eclipse%202019-03" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03%2F&amp;#038;title=Announcing%20Red%20Hat%20CodeReady%20Studio%2012.11.0.GA%20and%20JBoss%20Tools%204.11.0.Final%20for%20Eclipse%202019-03" data-a2a-url="https://developers.redhat.com/blog/2019/04/02/announcing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03/" data-a2a-title="Announcing Red Hat CodeReady Studio 12.11.0.GA and JBoss Tools 4.11.0.Final for Eclipse 2019-03"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/02/announcing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03/"&gt;Announcing Red Hat CodeReady Studio 12.11.0.GA and JBoss Tools 4.11.0.Final for Eclipse 2019-03&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uJbjABJFaXE" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;JBoss Tools 4.11.0 and Red Hat CodeReady Studio 12.11 for Eclipse 2019-03 are here and are waiting for you. In this article, I&amp;#8217;ll cover the highlights of the new releases and show how to get started. Installation Red Hat CodeReady Studio (previously known as Red Hat Developer Studio) comes with everything pre-bundled in its installer. [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/02/announcing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03/"&gt;Announcing Red Hat CodeReady Studio 12.11.0.GA and JBoss Tools 4.11.0.Final for Eclipse 2019-03&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/04/02/announcing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">579707</post-id><dc:creator>Jeff Maury</dc:creator><dc:date>2019-04-02T18:00:57Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/02/announcing-red-hat-codereadystudio-12-11-0-ga-and-jboss-tools-4-11-0-final-for-eclipse-2019-03/</feedburner:origLink></entry><entry><title>Announcing Red Hat CodeReady Studio, the latest evolution of Red Hat Developer Studio</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/MvpKVUsz8WQ/" /><category term="Announcement" /><category term="CodeReady portfolio" /><category term="Developer Tools" /><category term="Java" /><category term="Red Hat JBoss Developer Studio" /><category term="Eclipse" /><category term="OpenShift Container Platform" /><author><name>Bob Davis</name></author><id>https://developers.redhat.com/blog/?p=582197</id><updated>2019-04-02T18:00:11Z</updated><published>2019-04-02T18:00:11Z</published><content type="html">&lt;p&gt;Red Hat has been shipping a distribution of Eclipse IDE for years now, including all of the great features of Eclipse along with the add-ons, plugins, and tooling that make working with our products easy and enjoyable. These distributions have gone by different names over the years to indicate how they fit into the Red Hat ecosystem, and to tap into the trust that developers have when they think about Red Hat and what a Red Hat product means for them: it’ll be reliable; it’ll have a published lifecycle; it’s built from source; and if you submit a bug, we’ll fix it (and give the fix to the community). This change is no different.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/products/devstudio/overview/"&gt;Red Hat CodeReady Studio&lt;/a&gt; is the latest evolution of Red Hat Developer Studio, which itself was an evolution of JBoss Developer Studio. We’re proud to include our distribution of Eclipse IDE in the expanding CodeReady portfolio. Based on the latest Eclipse 4.11, with the latest additions of JBoss Tools and end-to-end testing that ensures everything works as expected, developers can count on the same great experience they’ve grown used to. With tools for working with Fuse and other middleware products and connectors for Red Hat OpenShift that enable super-fast, container-native “inner loop” development cycles, CodeReady Studio is absolutely one of the best desktop IDEs an enterprise &lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Java&lt;sup&gt;TM&lt;/sup&gt; developer&lt;/a&gt; can use.&lt;/p&gt; &lt;p&gt;&lt;span id="more-582197"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The Red Hat CodeReady portfolio of products for software developers is growing. In addition to our desktop IDE, CodeReady Studio, we have Red Hat CodeReady Workspaces, which is our container-native, browser-based IDE that lets teams work together securely and collaboratively on your OpenShift cluster. The CodeReady portfolio of tools is built with software developers in mind, with the goal to give them the tools they need for the jobs they do &amp;#8211; and hopefully add in some superpowers along the way.&lt;/p&gt; &lt;p&gt;See the technical details about what this latest update means for you &lt;a href="https://developers.redhat.com/blog/?p=579707"&gt;in Jeff Maury’s post&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2C%20the%20latest%20evolution%20of%20Red%20Hat%20Developer%20Studio" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2C%20the%20latest%20evolution%20of%20Red%20Hat%20Developer%20Studio" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2C%20the%20latest%20evolution%20of%20Red%20Hat%20Developer%20Studio" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2C%20the%20latest%20evolution%20of%20Red%20Hat%20Developer%20Studio" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2C%20the%20latest%20evolution%20of%20Red%20Hat%20Developer%20Studio" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2C%20the%20latest%20evolution%20of%20Red%20Hat%20Developer%20Studio" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2C%20the%20latest%20evolution%20of%20Red%20Hat%20Developer%20Studio" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio%2F&amp;#38;linkname=Announcing%20Red%20Hat%20CodeReady%20Studio%2C%20the%20latest%20evolution%20of%20Red%20Hat%20Developer%20Studio" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fannouncing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio%2F&amp;#038;title=Announcing%20Red%20Hat%20CodeReady%20Studio%2C%20the%20latest%20evolution%20of%20Red%20Hat%20Developer%20Studio" data-a2a-url="https://developers.redhat.com/blog/2019/04/02/announcing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio/" data-a2a-title="Announcing Red Hat CodeReady Studio, the latest evolution of Red Hat Developer Studio"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/02/announcing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio/"&gt;Announcing Red Hat CodeReady Studio, the latest evolution of Red Hat Developer Studio&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/MvpKVUsz8WQ" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat has been shipping a distribution of Eclipse IDE for years now, including all of the great features of Eclipse along with the add-ons, plugins, and tooling that make working with our products easy and enjoyable. These distributions have gone by different names over the years to indicate how they fit into the Red [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/02/announcing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio/"&gt;Announcing Red Hat CodeReady Studio, the latest evolution of Red Hat Developer Studio&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/04/02/announcing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">582197</post-id><dc:creator>Bob Davis</dc:creator><dc:date>2019-04-02T18:00:11Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/02/announcing-red-hat-codeready-studio-the-latest-evolution-of-red-hat-developer-studio/</feedburner:origLink></entry><entry><title>The next integration evolution - blockchain</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/3IlBOvbkZVw/the-next-integration-evolution.html" /><category term="Blockchain" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_ofbizian" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="integration" scheme="searchisko:content:tags" /><category term="jBPM" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-the_next_integration_evolution_blockchain</id><updated>2019-04-02T09:05:26Z</updated><published>2019-04-02T09:02:00Z</published><content type="html">&lt;i&gt;Below is the conclusion from an article I wrote at TechCrunch. Checkout the full article &lt;a href="https://techcrunch.com/2019/02/05/blockchain-as-integration-evolution/"&gt;here&lt;/a&gt;. &lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Enterprise integration has multiple nuances. Integration challenges within an organization, where all systems are controlled by one entity and participants have some degree of trust to each other, are mostly addressed by modern ESBs, BPMs and Microservices architectures. But when it comes to multi-party B2B integration, there are additional challenges. These systems are controlled by multiple organizations, have no visibility of the business processes and do not trust each other. In these scenarios, we see organizations experimenting with a new breed of blockchain-based technology that relies not only on sharing of the protocols and contracts but sharing of the end-to-end business processes and state.&lt;br /&gt;&lt;span style="font-weight: 400;"&gt;&lt;table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td style="text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-d9k9r7aaA0M/XKMixCKCohI/AAAAAAAAMeE/D4p4iU-7Zt4sK2_gsxb2H3cXFCSLtdAyACLcBGAs/s1600/integration_evolution_blockchain.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"&gt;&lt;img border="0" data-original-height="524" data-original-width="1156" height="181" src="https://4.bp.blogspot.com/-d9k9r7aaA0M/XKMixCKCohI/AAAAAAAAMeE/D4p4iU-7Zt4sK2_gsxb2H3cXFCSLtdAyACLcBGAs/s400/integration_evolution_blockchain.png" width="400" /&gt;&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class="tr-caption" style="text-align: center;"&gt;&lt;div class="wp-caption-text" id="caption-attachment-1773486"&gt;Integration e&lt;span style="font-weight: 400;"&gt;volution stages&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/span&gt;&lt;br /&gt;And this trend is aligned with the general direction integration has been evolving over the years: from sharing the very minimum protocols, to sharing and exposing more and more in the form of contracts, APIs and now business processes. This shared integration infrastructure enables new transparent integration models where the previously private business processes are now jointly owned, agreed, built, maintained and standardized using the open-source collaboration model. This can motivate organizations to share business processes and form networks to benefit further from joint innovation, standardization and deeper integration in general.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/3IlBOvbkZVw" height="1" width="1" alt=""/&gt;</content><summary>Below is the conclusion from an article I wrote at TechCrunch. Checkout the full article here. Enterprise integration has multiple nuances. Integration challenges within an organization, where all systems are controlled by one entity and participants have some degree of trust to each other, are mostly addressed by modern ESBs, BPMs and Microservices architectures. But when it comes to multi-party ...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2019-04-02T09:02:00Z</dc:date><feedburner:origLink>http://www.ofbizian.com/2019/04/the-next-integration-evolution.html</feedburner:origLink></entry><entry><title>How data layout affects memory performance</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ZV4EApjocMo/" /><category term="Performance" /><category term="developer" /><category term="performance" /><author><name>William Cohen</name></author><id>https://developers.redhat.com/blog/?p=573107</id><updated>2019-04-02T07:00:44Z</updated><published>2019-04-02T07:00:44Z</published><content type="html">&lt;p&gt;The mental model most people have of how computer memory (aka Random Access Memory or RAM) operates is inaccurate. The assumption that any access to any byte in memory has the same low cost does not hold on modern processors. In this article, I&amp;#8217;ll explain what developers need to know about modern memory and how data layout can affect performance.&lt;/p&gt; &lt;p&gt;Current memory is starting to look more like an extremely fast block storage device. Rather than reading or writing individual bytes, the processor is reading or writing groups of bytes that fill a cache line (commonly 32 to 128 bytes in size). An access to memory requires well over a hundred clock cycles, two orders of magnitude slower than executing an instruction on the processor. Thus, programmers might reconsider the data structures used in their program if they are interested in obtaining better performance.&lt;/p&gt; &lt;p&gt;&lt;span id="more-573107"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Latency is not improving&lt;/h3&gt; &lt;p&gt;The first thing to note about memory is that the latency for accessing main memory is not improving. Much of the bandwidth improvement seen on processors is due to transferring larger groups of bytes in a single transaction. In the 1980s, processors typically transferred a few bytes (4 or fewer bytes) at a time. Current processor’s memory operations are moving much larger groups of 32 to 128 bytes as a group—the amount of data that fits in a single cache line. Every time memory is accessed, there is some delay due to setup time selecting the location in memory being accessed. Sharing that latency between a larger group of bytes reduces the cost per byte. This is analogous to a bus not being any faster than a car, but the greater carrying capacity of the bus will get more people moved between two points than the car in a given amount of time.&lt;/p&gt; &lt;p&gt;However, these wider memory operations assume that all the data read or written is actually being used by the processor. If the processor fetches a 64-byte chunk of memory and only modifies one byte then stores that changed byte back to memory, more than 98% of the memory bandwidth has been wasted. Data structures may be padded for data alignment as mentioned in “&lt;a href="https://developers.redhat.com/blog/2016/06/01/how-to-avoid-wasting-megabytes-of-memory-a-few-bytes-at-a-time/"&gt;How to avoid wasting megabytes of memory a few bytes at a time&lt;/a&gt;.” Those unused bytes used to align fields in the data structure contribute to the wasted bandwidth every time the data structure is loaded from memory or stored to memory. Organizing the data structures to avoid padding for data alignment can lead to higher effective bandwidth.&lt;/p&gt; &lt;p&gt;The processor may also attempt to hide memory access latency by speculatively fetching data. The hardware analyzes the sequences memory accesses and detects accesses that have a constant number of bytes between them. Once these strides through memory are detected, the processor starts prefetching the memory before the code actually requests the memory, which reduces the latency observed in the code. For this approach to work, the access patterns used in the code need to be very simple, such as every &lt;em&gt;n&lt;/em&gt;th element in an array. The memory latency of random memory accesses due to pointer chasing through linked lists will not be reduced by the prefetch mechanisms.&lt;/p&gt; &lt;h3&gt;Vector-style instructions&lt;/h3&gt; &lt;p&gt;New processors include vector-style instructions such as Advanced Vector Extensions (AVX), which can perform four or eight operations in parallel. However, to use these instructions, the operands need to group of adjacent elements in an array. Using Arrays of Structures (AoS) may prevent using the vector-style instruction on the fields from multiple structures. Developers may want to use Structure of Arrays (SoA) instead to get a data layout that allows the use of the vector instruction. Having like elements in arrays can also reduce the padding in the data, resulting in more effective memory bandwidth.&lt;/p&gt; &lt;p&gt;Given the way that the processor treats memory, developers might improve performance of memory-intensive applications by designing the data structures more like files on a block device:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Arrange layout to minimize reading/writing useless bytes (padding for alignment)&lt;/li&gt; &lt;li&gt;Minimize random accesses&lt;/li&gt; &lt;li&gt;Access elements with predictable stride, ideally sequentially (stride 1)&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;For additional details on optimizing memory performance refer to Ulrich Drepper’s “&lt;a href="https://akkadia.org/drepper/cpumemory.pdf"&gt;What Every Programmer Should Know about Memory&lt;/a&gt;.&amp;#8221; It offers a great deal of useful information about how memory actually works. &lt;a href="https://software.intel.com/sites/default/files/managed/9e/bc/64-ia-32-architectures-optimization-manual.pdf"&gt;The Intel® 64 and IA-32 Architectures Optimization Reference Manual&lt;/a&gt; also goes in the great detail on how to structure code to obtain better performance from memory.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fhow-data-layout-affects-memory-performance%2F&amp;#38;linkname=How%20data%20layout%20affects%20memory%20performance" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fhow-data-layout-affects-memory-performance%2F&amp;#38;linkname=How%20data%20layout%20affects%20memory%20performance" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fhow-data-layout-affects-memory-performance%2F&amp;#38;linkname=How%20data%20layout%20affects%20memory%20performance" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fhow-data-layout-affects-memory-performance%2F&amp;#38;linkname=How%20data%20layout%20affects%20memory%20performance" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fhow-data-layout-affects-memory-performance%2F&amp;#38;linkname=How%20data%20layout%20affects%20memory%20performance" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fhow-data-layout-affects-memory-performance%2F&amp;#38;linkname=How%20data%20layout%20affects%20memory%20performance" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fhow-data-layout-affects-memory-performance%2F&amp;#38;linkname=How%20data%20layout%20affects%20memory%20performance" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fhow-data-layout-affects-memory-performance%2F&amp;#38;linkname=How%20data%20layout%20affects%20memory%20performance" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F02%2Fhow-data-layout-affects-memory-performance%2F&amp;#038;title=How%20data%20layout%20affects%20memory%20performance" data-a2a-url="https://developers.redhat.com/blog/2019/04/02/how-data-layout-affects-memory-performance/" data-a2a-title="How data layout affects memory performance"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/02/how-data-layout-affects-memory-performance/"&gt;How data layout affects memory performance&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ZV4EApjocMo" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The mental model most people have of how computer memory (aka Random Access Memory or RAM) operates is inaccurate. The assumption that any access to any byte in memory has the same low cost does not hold on modern processors. In this article, I&amp;#8217;ll explain what developers need to know about modern memory and how [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/02/how-data-layout-affects-memory-performance/"&gt;How data layout affects memory performance&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/04/02/how-data-layout-affects-memory-performance/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">573107</post-id><dc:creator>William Cohen</dc:creator><dc:date>2019-04-02T07:00:44Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/02/how-data-layout-affects-memory-performance/</feedburner:origLink></entry><entry><title>A look at LLVM Advanced Data Types and trivially copyable types</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/iejY7fjlITU/" /><category term="C++" /><category term="clang/LLVM" /><category term="Programming Languages" /><category term="c++" /><category term="llvm" /><author><name>Serge Guelton</name></author><id>https://developers.redhat.com/blog/?p=572117</id><updated>2019-04-01T07:02:44Z</updated><published>2019-04-01T07:02:44Z</published><content type="html">&lt;p&gt;A few bugs have been lurking in the &lt;a href="https://bugs.llvm.org/"&gt;LLVM Bugzilla&lt;/a&gt; for a long time, namely &lt;a href="https://bugs.llvm.org/show_bug.cgi?id=39427"&gt;#39427&lt;/a&gt; and &lt;a href="https://bugs.llvm.org/show_bug.cgi?id=35978"&gt;#35978,&lt;/a&gt; which are related to a custom implementation of the &lt;a href="https://en.cppreference.com/w/cpp/types/is_trivially_copyable"&gt;&lt;code&gt;is_trivially_copyable&lt;/code&gt;&lt;/a&gt; data type, and they have a bad impact on the &lt;a href="https://en.wikipedia.org/wiki/Application_binary_interface"&gt;Application Binary Interface (ABI)&lt;/a&gt; of &lt;a href="http://llvm.org/"&gt;LLVM&lt;/a&gt; libraries. In this article, I will take a closer look at these issues and describe potential workarounds.&lt;/p&gt; &lt;p&gt;The LLVM compiler infrastructure relies on several Advanced Data Types (ADT) to provide different speed/size trade-offs than the containers from the Standard Template Library (STL). Additionally, this ADT library provides features from future standard versions, but implemented in the C++ version (currently C++11) that LLVM supports as a code base. Finally, these ADTs must be compatible with the compiler requirements of the LLVM code base; basically, GCC version &amp;#62;= 4.8 and Clang version &amp;#62;= 3.1. (If you are interested in LLVM ADTs, Chandler Carruth did a nice talk on the subject at &lt;a href="https://www.youtube.com/watch?v=vElZc6zSIXM"&gt;CppCon 2016&lt;/a&gt;.)&lt;/p&gt; &lt;p&gt;&lt;span id="more-572117"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Among these data types is the &lt;code&gt;llvm::SmallVector&lt;/code&gt; type, an alternative to &lt;code&gt;std::vector&lt;/code&gt; that uses in-place storage, if the array contains fewer than &lt;code&gt;N + 1&lt;/code&gt; elements, and heap storage otherwise. Interestingly, &lt;code&gt;llvm::SmallVector&lt;/code&gt; has a specialization when &lt;code&gt;T&lt;/code&gt; is known to be trivially copyable that allows less and faster data movement when pruning, copying, or moving data from one container to another. The specialization basically looks like this:&lt;/p&gt; &lt;pre&gt;template&amp;#60;class T&amp;#62; class SmallVectorBase { ... ; }; template&amp;#60;class T&amp;#62; class SmallVector : public SmallVectorBase&amp;#60;T&amp;#62; { ... ; }; &lt;/pre&gt; &lt;p&gt;Unfortunately, &lt;code&gt;std::is_trivially_copyable&lt;/code&gt; is not supported by older versions of GCC, so the LLVM code base used to provide its own version in this (simplified) form:&lt;/p&gt; &lt;pre&gt;template&amp;#60;class T&amp;#62; struct is_trivially_copyable { static constexpr bool value = #if defined(__GNUC__) &amp;#38;&amp;#38; __GNUC__ &amp;#62;= 5 std::is_trivially_copyable&amp;#60;T&amp;#62;::value #else !std::is_class&amp;#60;T&amp;#62;::value #endif ; } &lt;/pre&gt; &lt;p&gt;There&amp;#8217;s an inherent problem in that implementation, and it&amp;#8217;s not a validity issue. Consider the following compilation units:&lt;/p&gt; &lt;pre&gt;// lib.cpp #include struct DataType { struct SomeRandomType { int Value;}; llvm::SmallVector&amp;#60;SomeRandomType&amp;#62; Data; }; DataType Global; &lt;/pre&gt; &lt;pre&gt;// user.cpp #include struct DataType { struct SomeRandomType { int Value;}; llvm::SmallVector&amp;#60;SomeRandomType&amp;#62; Data; }; extern DataType Global; DataType Local; &lt;/pre&gt; &lt;p&gt;What happens if &lt;code&gt;lib.cpp&lt;/code&gt; gets compiled with GCC 4.9 and &lt;code&gt;user.cpp&lt;/code&gt; gets compiled with GCC 5.1? A quick look at the symbol table (e.g., through &lt;code&gt;nm -C&lt;/code&gt;) shows that &lt;code&gt;lib.o&lt;/code&gt; defines the symbol &lt;code&gt;llvm::SmallVectorTemplateBase::SmallVectorTemplateBase(unsigned long)&lt;/code&gt;, whereas &lt;code&gt;user.o&lt;/code&gt; defines the symbol &lt;code&gt;llvm::SmallVectorTemplateBase::SmallVectorTemplateBase(unsigned long)&lt;/code&gt;. This approach can lead to various errors, from types with the same name but different layout to link errors.&lt;/p&gt; &lt;p&gt;This type of scenario may happen on binary distribution, where the compiler used to compile system libraries and the compiler used to compile user code may differ, and it&amp;#8217;s one of the possible instances of ABI error. Avoiding such errors is one of the software packager&amp;#8217;s tasks.&lt;/p&gt; &lt;h2&gt;Workarounds&lt;/h2&gt; &lt;p&gt;As a workaround, &lt;code&gt;llvm::is_trivially_copyable&lt;/code&gt; is specialized for various types to enforce the expected property, even if the trait implementation says the opposite. This is tedious to maintain, and error-prone (e.g., as of C++11, a pair of int is not trivially copyable; see &lt;a href="https://godbolt.org/z/184QEc"&gt;https://godbolt.org/z/184QEc&lt;/a&gt;).&lt;/p&gt; &lt;p&gt;What is the solution then? Avoid the per-compiler-version implementation of &lt;code&gt;llvm::is_trivially_copyable&lt;/code&gt; and provide a generic one. This is not an easy task, as it is generally implemented as a compiler built-in (namely, &lt;code&gt;__is_trivially_copyable&lt;/code&gt; for clang). Fortunately, there is a way out, but to understand it, we need to understand what it means to be trivially copyable. A trivially copyable type verifies the following properties:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Every copy constructor is trivial or deleted&lt;/li&gt; &lt;li&gt;Every move constructor is trivial or deleted&lt;/li&gt; &lt;li&gt;Every copy assignment operator is trivial or deleted&lt;/li&gt; &lt;li&gt;Every move assignment operator is trivial or deleted&lt;/li&gt; &lt;li&gt;Trivial non-deleted destructor&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Starting with C++17, there&amp;#8217;s also the requirement that at least a copy/move constructor or assignment operator must exist, but the LLVM code base is not affected by this (yet).&lt;/p&gt; &lt;p&gt;Checking whether a constructor or assignment has been deleted can typically be achieved through a &amp;#8220;substitution failure is not an error&amp;#8221; (SFINAE), as in:&lt;/p&gt; &lt;pre&gt;template &amp;#60;class T&amp;#62; struct is_copy_assignable { template &amp;#60;class F&amp;#62; static auto get(F*) -&amp;#62; decltype(std::declval() = std::declval(), std::true_type{}); static std::false_type get(...); static constexpr bool value = decltype(get((T*)nullptr))::value; }; &lt;/pre&gt; &lt;p&gt;Checking whether the implementation is the default one is slightly trickier. Fortunately, starting with C++11:&lt;/p&gt; &lt;p style="text-align: left;"&gt;&lt;em&gt;If a union contains a non-static data member with a non-trivial special&lt;/em&gt;&lt;br /&gt; &lt;em&gt;member function (copy/move constructor, copy/move assignment, or&lt;/em&gt;&lt;br /&gt; &lt;em&gt;destructor), that function is deleted by default in the union and needs to&lt;/em&gt;&lt;br /&gt; &lt;em&gt;be defined explicitly by the programmer.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;This means that instantiating &lt;code&gt;is_copy_assignable&lt;/code&gt; for the following type:&lt;/p&gt; &lt;pre&gt;template union trivial_helper { T t; }; &lt;/pre&gt; &lt;p&gt;tells us whether the associated type is trivially copyable assignable.&lt;/p&gt; &lt;p&gt;Once this tooling is set up, the trivially copyable trait can be summed up as:&lt;/p&gt; &lt;pre&gt;static constexpr bool value = has_trivial_destructor&amp;#60;T&amp;#62; &amp;#38;&amp;#38; (has_deleted_move_assign&amp;#60;T&amp;#62; || has_trivial_move_assign&amp;#60;T&amp;#62;) &amp;#38;&amp;#38; (has_deleted_move_constructor&amp;#60;T&amp;#62; || has_trivial_move_constructor&amp;#60;T&amp;#62;) &amp;#38;&amp;#38; (has_deleted_copy_assign&amp;#60;T&amp;#62; || has_trivial_copy_assign&amp;#60;T&amp;#62;) &amp;#38;&amp;#38; (has_deleted_copy_constructor&amp;#60;T&amp;#62; || has_trivial_copy_constructor&amp;#60;T&amp;#62;); &lt;/pre&gt; &lt;p&gt;To verify the consistency of the implementation with respect to the &lt;code&gt;std&lt;/code&gt; one, the following guarded static assertion can be added:&lt;/p&gt; &lt;pre&gt;#ifdef HAVE_STD_IS_TRIVIALLY_COPYABLE static_assert(value == std::is_trivially_copyable&amp;#60;T&amp;#62;::value, "inconsistent behavior between llvm:: and std:: implementation of is_trivially_copyable"); #endif &lt;/pre&gt; &lt;p&gt;In the end, we get a fix for the ABI instability of the &lt;code&gt;llvm::SmallVector&lt;/code&gt; implementation, hurray! As a sad (or happy, depending on your perspective) note, LLVM is getting close to requiring GCC 5.1 or higher, which makes this whole exploration obsolete.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fa-look-at-llvm-advanced-data-types-and-trivially-copyable-types%2F&amp;#38;linkname=A%20look%20at%20LLVM%20Advanced%20Data%20Types%20and%20trivially%20copyable%20types" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fa-look-at-llvm-advanced-data-types-and-trivially-copyable-types%2F&amp;#38;linkname=A%20look%20at%20LLVM%20Advanced%20Data%20Types%20and%20trivially%20copyable%20types" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fa-look-at-llvm-advanced-data-types-and-trivially-copyable-types%2F&amp;#38;linkname=A%20look%20at%20LLVM%20Advanced%20Data%20Types%20and%20trivially%20copyable%20types" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fa-look-at-llvm-advanced-data-types-and-trivially-copyable-types%2F&amp;#38;linkname=A%20look%20at%20LLVM%20Advanced%20Data%20Types%20and%20trivially%20copyable%20types" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fa-look-at-llvm-advanced-data-types-and-trivially-copyable-types%2F&amp;#38;linkname=A%20look%20at%20LLVM%20Advanced%20Data%20Types%20and%20trivially%20copyable%20types" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fa-look-at-llvm-advanced-data-types-and-trivially-copyable-types%2F&amp;#38;linkname=A%20look%20at%20LLVM%20Advanced%20Data%20Types%20and%20trivially%20copyable%20types" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fa-look-at-llvm-advanced-data-types-and-trivially-copyable-types%2F&amp;#38;linkname=A%20look%20at%20LLVM%20Advanced%20Data%20Types%20and%20trivially%20copyable%20types" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fa-look-at-llvm-advanced-data-types-and-trivially-copyable-types%2F&amp;#38;linkname=A%20look%20at%20LLVM%20Advanced%20Data%20Types%20and%20trivially%20copyable%20types" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fa-look-at-llvm-advanced-data-types-and-trivially-copyable-types%2F&amp;#038;title=A%20look%20at%20LLVM%20Advanced%20Data%20Types%20and%20trivially%20copyable%20types" data-a2a-url="https://developers.redhat.com/blog/2019/04/01/a-look-at-llvm-advanced-data-types-and-trivially-copyable-types/" data-a2a-title="A look at LLVM Advanced Data Types and trivially copyable types"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/01/a-look-at-llvm-advanced-data-types-and-trivially-copyable-types/"&gt;A look at LLVM Advanced Data Types and trivially copyable types&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/iejY7fjlITU" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;A few bugs have been lurking in the LLVM Bugzilla for a long time, namely #39427 and #35978, which are related to a custom implementation of the is_trivially_copyable data type, and they have a bad impact on the Application Binary Interface (ABI) of LLVM libraries. In this article, I will take a closer look at [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/01/a-look-at-llvm-advanced-data-types-and-trivially-copyable-types/"&gt;A look at LLVM Advanced Data Types and trivially copyable types&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/04/01/a-look-at-llvm-advanced-data-types-and-trivially-copyable-types/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">572117</post-id><dc:creator>Serge Guelton</dc:creator><dc:date>2019-04-01T07:02:44Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/01/a-look-at-llvm-advanced-data-types-and-trivially-copyable-types/</feedburner:origLink></entry><entry><title>Modern business logic tooling workshop, lab 2: Create a new project</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/AIjaFI4HnfE/" /><category term="Accelerated Development and Management" /><category term="Integration" /><category term="Java" /><category term="Jboss EAP 7 beta" /><category term="Products" /><category term="architecture" /><category term="automation" /><category term="business automation" /><category term="business process management" /><category term="developer" /><category term="howto" /><category term="jboss" /><category term="Red Hat Process Automation Manager" /><author><name>Eric D. Schabell</name></author><id>https://developers.redhat.com/blog/?p=576957</id><updated>2019-04-01T07:02:09Z</updated><published>2019-04-01T07:02:09Z</published><content type="html">&lt;p&gt;This article series shows how to get started using modern business logic tooling. These updates start with moving from JBoss BPM to Red Hat Decision Manager and from JBoss BPM Suite to Red Hat Process Automation Manager.&lt;/p&gt; &lt;p&gt;The &lt;a href="https://developers.redhat.com/blog/2018/12/19/modern-business-logic-tooling-workshop-lab-1-installation/"&gt;first lab update&lt;/a&gt; showed how to install Red Hat Decision Manager on your laptop. This article highlights the second lab update for Red Hat Process Automation Manager, which shows how to create a new project.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s take a look at the lab, shall we?&lt;br /&gt; &lt;span id="more-576957"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Lab 2: Create a new project&lt;/h3&gt; &lt;p&gt;This lab is the second step in learning to develop a process integration project. It shows, step by step, how to create a new project from scratch. The easiest way is to &lt;a href="https://bpmworkshop.gitlab.io/rhpam/lab02.html" target="_blank" rel="noopener noreferrer"&gt;jump right into lab 2&lt;/a&gt;:&lt;/p&gt; &lt;p&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhpam/lab02.html" target="_blank" rel="noopener noreferrer"&gt;&lt;img class=" alignleft wp-image-577037 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screenshot-2019-03-19-at-15.28.32.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screenshot-2019-03-19-at-15.28.32.png" alt="" width="655" height="377" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screenshot-2019-03-19-at-15.28.32.png 655w, https://developers.redhat.com/blog/wp-content/uploads/2019/03/Screenshot-2019-03-19-at-15.28.32-300x173.png 300w" sizes="(max-width: 655px) 100vw, 655px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;If you have any comments or any questions about a part of the workshop that might not be clear, please reach out to me.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fmodern-business-logic-tooling-workshop-lab-2-create-a-new-project%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%202%3A%20Create%20a%20new%20project" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fmodern-business-logic-tooling-workshop-lab-2-create-a-new-project%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%202%3A%20Create%20a%20new%20project" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fmodern-business-logic-tooling-workshop-lab-2-create-a-new-project%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%202%3A%20Create%20a%20new%20project" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fmodern-business-logic-tooling-workshop-lab-2-create-a-new-project%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%202%3A%20Create%20a%20new%20project" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fmodern-business-logic-tooling-workshop-lab-2-create-a-new-project%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%202%3A%20Create%20a%20new%20project" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fmodern-business-logic-tooling-workshop-lab-2-create-a-new-project%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%202%3A%20Create%20a%20new%20project" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fmodern-business-logic-tooling-workshop-lab-2-create-a-new-project%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%202%3A%20Create%20a%20new%20project" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fmodern-business-logic-tooling-workshop-lab-2-create-a-new-project%2F&amp;#38;linkname=Modern%20business%20logic%20tooling%20workshop%2C%20lab%202%3A%20Create%20a%20new%20project" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F04%2F01%2Fmodern-business-logic-tooling-workshop-lab-2-create-a-new-project%2F&amp;#038;title=Modern%20business%20logic%20tooling%20workshop%2C%20lab%202%3A%20Create%20a%20new%20project" data-a2a-url="https://developers.redhat.com/blog/2019/04/01/modern-business-logic-tooling-workshop-lab-2-create-a-new-project/" data-a2a-title="Modern business logic tooling workshop, lab 2: Create a new project"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/01/modern-business-logic-tooling-workshop-lab-2-create-a-new-project/"&gt;Modern business logic tooling workshop, lab 2: Create a new project&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/AIjaFI4HnfE" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;This article series shows how to get started using modern business logic tooling. These updates start with moving from JBoss BPM to Red Hat Decision Manager and from JBoss BPM Suite to Red Hat Process Automation Manager. The first lab update showed how to install Red Hat Decision Manager on your laptop. This article highlights [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/04/01/modern-business-logic-tooling-workshop-lab-2-create-a-new-project/"&gt;Modern business logic tooling workshop, lab 2: Create a new project&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/04/01/modern-business-logic-tooling-workshop-lab-2-create-a-new-project/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">576957</post-id><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-04-01T07:02:09Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/04/01/modern-business-logic-tooling-workshop-lab-2-create-a-new-project/</feedburner:origLink></entry><entry><title>Red Hat Summit 2019: Integration and API Labs Roadmap</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/hpoXTJu5bto/red-hat-summit-2019-labs-integration-api-labs-roadmap.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_summit_2019_integration_and_api_labs_roadmap</id><updated>2019-04-01T05:00:07Z</updated><published>2019-04-01T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://reg.summit.redhat.com/" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img border="0" data-original-height="389" data-original-width="769" height="161" src="https://1.bp.blogspot.com/-yX0WaXZmaTI/XJj8CSvWUlI/AAAAAAAAth4/4Z1aZQ7VOp061sKNZ-_kMauutZPP46AMgCLcBGAs/s320/Screenshot%2B2019-03-25%2Bat%2B17.04.08.png" width="320" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://www.redhat.com/en/summit/2019" target="_blank"&gt;Red Hat Summit 2019&lt;/a&gt; is rocking Boston, MA from May 7-9th in the &lt;a href="https://www.signatureboston.com/BCEC" target="_blank"&gt;Boston Convention and Exhibition Center&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Everything you need to know about the current state of open source enterprise ready software can be found at this event. From customers talking about their experiences leveraging open source in their solutions, to the creators of open source technologies you're using, and all the way down to hands-on lab experiences on these technologies.&lt;br /&gt;&lt;br /&gt;This hands-on appeal is what this series of articles is about. It's&amp;nbsp;interesting to take a tour, so starting with this article let's examine a series of instructor-led labs based on a specific theme.&lt;br /&gt;&lt;br /&gt;This week it's a roadmap to&amp;nbsp;&lt;i&gt;integration and API &lt;/i&gt;lab content.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;The following labs can be found in the &lt;a href="https://summit.redhat.com/conference/sessions" target="_blank"&gt;session catalog online&lt;/a&gt;, by searching on title or filtering on &lt;i&gt;instructor-led labs &lt;/i&gt;and &lt;i&gt;integration &amp;amp; APIs.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt; &lt;br /&gt;&lt;h3&gt;Agile integration with APIs and containers workshop&lt;/h3&gt;&lt;i&gt;The agile integration with APIs and containers session is a hands-on workshop for developing, testing, and deploying integrated cloud-native solutions.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;This 2-hour lab will start with an overview of agile integration and a discussion of the necessary architecture. We’ll also present examples of how customers are using Red Hat’s agile integration methodology to stay competitive. This hands-on workshop is designed for integrators who will be leading the activities of API development and security. These activities are UI-driven and allow the integrator to successfully deploy, integrate, (Red Hat Fuse), secure, and manage API services. We'll also cover accelerating the development of cloud-native applications, developing API-centric services, providing API security, and establishing operational management.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;Speakers:&amp;nbsp;Simon Green, Yossi Koren, Christina WeiMei Lin, Vinay Bhalerao&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Agile integration for the enterprise&lt;/h3&gt;&lt;i&gt;Organizations invest in a deep portfolio of technologies to meet diverse business requirements.The interconnectivity of these systems is fundamental to the success of the business. To keep pace with the competition, solutions must achieve scalability to meet market demand, as well as to meet business stakeholder requirements. Agile integration is the key to the success of organizations seeking to scale and support demanding stakeholder expectations.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;In this lab, you'll learn to use Red Hat’s integration portfolio for various use cases, including:&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;i&gt;Integrating applications without coding.&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Implementing advanced integration scenarios that use multiple backend services.&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Becoming fluent with a variety of deployment methodologies.&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Building fault-tolerant microservices applications.&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Facilitating integration to legacy systems, by exposing these systems as microservices.&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Designing, exposing, and managing REST APIs.&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Applying service-level agreements to microservices monitoring.&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Using cloud-native infrastructure to host a highly available integration solution.&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;i&gt;You'll get hands-on experience with Red Hat Fuse Online, Red Hat Fuse for OpenShift Container Platform, Red Hat Fuse for Red Hat JBoss Enterprise Application Platform (EAP), ISTIO, Red Hat 3scale API Management, and Red Hat OpenShift Application Runtimes.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;Speakers:&amp;nbsp;Andrew Block, Chad Darby, Hong Hua Chin&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Bridging microservice boundaries with Apache Kafka and Debezium&lt;/h3&gt;&lt;i&gt;Domain-driven design suggests to split large systems into bounded contexts. Implemented by independent teams as loosely coupled microservices, this pattern lets organizations adapt to new business requirements quickly. While they shouldn’t share resources such as a common database, services don’t exist in isolation either: often one service needs data from another for providing its functionality.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;In this lab. we'll cover:&lt;/i&gt;&lt;br /&gt;&lt;i&gt;•&amp;nbsp; How microservices can share data using Apache Kafka while maintaining proper isolation and independence.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;•&amp;nbsp; How to use change data capture (CDC) to stream data changes directly out of a database, without any application changes needed.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;•&amp;nbsp; How to propagate the data owned by a microservice data to sync systems such as caches and full-text search indexes.&amp;nbsp;&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Based on Red Hat OpenShift, Red Hat AMQ streams, Kafka, and Debezium, an open-source CDC solution, this hands-on lab will guide you through the steps to successfully implement asynchronous data exchange patterns between your microservices.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;Speakers:&amp;nbsp;Emmanuel Bernard, Gunnar Morling, Marius Bogoevici, Paolo Patierno&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Learning to use the Camel Rest DSL with 3scale and OpenShift&lt;/h3&gt;&lt;i&gt;This lab will give an introduction to the open source integration framework Apache Camel, the upstream project for Red Hat Fuse, as well as Red Hat 3scale API Automation and Red Hat OpenShift Container Platform. You'll learn Camel basics and be walked through developing and deploying a route with Spring Boot. We'll also cover how to use Camel with OpenShift Container Platform and 3Scale API Automation to have web scale applications and with fully managed APIs. Due to the common need for REST APIs in enterprise applications, we'll cover how to start writing a REST Camel route using examples of the Camel REST DSL. Come learn how to deploy camel routes onto OpenShift Container Platform and set up API management using 3scale API Management to manage your API usage, URLs, and more.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;Speakers:&amp;nbsp;Claus Ibsen, Mary Cochran, Dusty Humphries&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Navigating hybrid cloud integration—a hackathon&lt;/h3&gt;&lt;i&gt;Be innovative and create your own hybrid integration solution with Red Hat integration technology to solve day-to-day integration challenges. You'll be handed a set of integration problems to choose from and have access to Red Hat Fuse, Red Hat's integration platform. You can work as an individual or in groups to build you integration solution on top of it. Common challenges include connecting to brown field system, SaaS applications, handling streaming of events, and providing APIs.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;Speaker:&amp;nbsp;Gary Gaughan, Nicola Ferraro, Christina WeiMei Lin, Evan Shortiss, Hugo Guerrero Olivares&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;h3&gt;Running Apache Kafka on OpenShift with AMQ streams&lt;/h3&gt;&lt;i&gt;In this lab, you’ll learn the practical aspects of deploying, operating, and interacting with an Apache Kafka cluster on Red Hat OpenShift Container Platform thanks to Red Hat AMQ streams. We'll cover how to:&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;i&gt;Manage Apache Kafka clusters, topics, and users on OpenShift Container Platform using the AMQ streams operators and Kubernetes custom resources (CRDs).&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Self-service your Kafka clusters, topics, and users by monitoring specific projects.&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Create persistent Kafka clusters using persistent volume.&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Interact with your Kafka cluster from both within and outside the OpenShift Container Platform instance, using a set of sample applications.&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Manage and monitor your Kafka clusters, using Grafana and Prometheus.&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Implement a cross-datacenter solution using MirrorMaker deployed by the AMQ streams cluster operator.&lt;/i&gt;&lt;/li&gt;&lt;li&gt;&lt;i&gt;Handle cluster and clients TLS certificates for encryption and authentication.&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;i&gt;Speaker:&amp;nbsp;Marius Bogoevici, Paolo Patierno, Emmanuel Bernard, Gunnar Morling&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Stay tuned for more articles with insights into other themes that might interest you enough to register for one of these instructor-led labs at Red Hat Summit 2019.&lt;br /&gt;&lt;br /&gt;Looking forward to seeing you there!&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=hZn5i_8bVX8:16X1RbSS-DU:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=hZn5i_8bVX8:16X1RbSS-DU:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=hZn5i_8bVX8:16X1RbSS-DU:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=hZn5i_8bVX8:16X1RbSS-DU:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=hZn5i_8bVX8:16X1RbSS-DU:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=hZn5i_8bVX8:16X1RbSS-DU:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=hZn5i_8bVX8:16X1RbSS-DU:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=hZn5i_8bVX8:16X1RbSS-DU:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=hZn5i_8bVX8:16X1RbSS-DU:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=hZn5i_8bVX8:16X1RbSS-DU:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=hZn5i_8bVX8:16X1RbSS-DU:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/hZn5i_8bVX8" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/hpoXTJu5bto" height="1" width="1" alt=""/&gt;</content><summary>Red Hat Summit 2019 is rocking Boston, MA from May 7-9th in the Boston Convention and Exhibition Center. Everything you need to know about the current state of open source enterprise ready software can be found at this event. From customers talking about their experiences leveraging open source in their solutions, to the creators of open source technologies you're using, and all the way down to ha...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-04-01T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/hZn5i_8bVX8/red-hat-summit-2019-labs-integration-api-labs-roadmap.html</feedburner:origLink></entry></feed>
